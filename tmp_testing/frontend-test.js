// Here's how we would access our contract:
var abi = 0000 /* TODO abi generated by the compiler */
var AddProjectContract = web3.eth.contract(abi)
var contractAddress = 0000 /* TODO our contract address on Ethereum after deploying */
var AddProject = AddProjectContract.at(contractAddress)
// `AddProject` has access to our contract's public functions and events

// some sort of event listener to take the text input:
$("#ourButton").click(function(e) {
  var name = $("#nameInput").val()
  var state = "Vanuatu"
  var amount = 1000
  // Call our contract's `addProject` function:
  AddProject.addProject(name, state, amount)
})

// Listen for the `AddProject` event, and update the UI
var event = AddProject.ProjectAdded(function(error, result) {
  if (error) return
  updateProjectPage(result.id, result.name, result.state, result.amount, result.startDate, result.endDate)
})

// Update the content with the new Project
function updateProjectPage(id, name, state, amount, startDate, endDate) {
  //TODO auf das Event muss reagiert werden

  return true
}